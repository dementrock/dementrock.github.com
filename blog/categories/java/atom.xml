<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | DementRock's blog]]></title>
  <link href="http://blog.rockyduan.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://blog.rockyduan.com/"/>
  <updated>2012-01-09T11:16:59+08:00</updated>
  <id>http://blog.rockyduan.com/</id>
  <author>
    <name><![CDATA[DementRock]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Java Package for Solving Pell's Equation]]></title>
    <link href="http://blog.rockyduan.com/blog/2011/12/31/package-pell-eq/"/>
    <updated>2011-12-31T12:35:00+08:00</updated>
    <id>http://blog.rockyduan.com/blog/2011/12/31/package-pell-eq</id>
    <content type="html"><![CDATA[<p>While working on Project Euler problems, I&#8217;ve encountered many problems which make use of Pell&#8217;s Equation. Therefore I created this package to write these programs more conveniently.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (PellSolver.java)</span> <a href='/downloads/code/PellSolver.java'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">acm</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Quadratic</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="n">c</span><span class="o">,</span> <span class="n">d</span><span class="o">;</span> <span class="c1">// Fraction (a*sqrt(b) + c) / d</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">gcd</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">y</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">gcd</span> <span class="o">(</span><span class="n">y</span> <span class="o">%</span> <span class="n">x</span><span class="o">,</span> <span class="n">x</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Quadratic</span> <span class="o">(</span><span class="kt">int</span> <span class="n">raw_a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">raw_b</span><span class="o">,</span> <span class="kt">int</span> <span class="n">raw_c</span><span class="o">,</span> <span class="kt">int</span> <span class="n">raw_d</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">common</span> <span class="o">=</span> <span class="n">gcd</span><span class="o">(</span><span class="n">gcd</span><span class="o">(</span><span class="n">raw_a</span><span class="o">,</span> <span class="n">raw_c</span><span class="o">),</span> <span class="n">raw_d</span><span class="o">);</span>
</span><span class='line'>        <span class="n">a</span> <span class="o">=</span> <span class="n">raw_a</span> <span class="o">/</span> <span class="n">common</span><span class="o">;</span>
</span><span class='line'>        <span class="n">b</span> <span class="o">=</span> <span class="n">raw_b</span><span class="o">;</span>
</span><span class='line'>        <span class="n">c</span> <span class="o">=</span> <span class="n">raw_c</span> <span class="o">/</span> <span class="n">common</span><span class="o">;</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="n">raw_d</span> <span class="o">/</span> <span class="n">common</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getInt</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">((</span><span class="n">a</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">b</span><span class="o">)</span> <span class="o">+</span> <span class="n">c</span><span class="o">)</span> <span class="o">/</span> <span class="n">d</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Quadratic</span> <span class="nf">getNext</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">new_a</span> <span class="o">=</span> <span class="n">a</span><span class="o">,</span> <span class="n">new_b</span> <span class="o">=</span> <span class="n">b</span><span class="o">,</span> <span class="n">new_c</span> <span class="o">=</span> <span class="n">c</span> <span class="o">-</span> <span class="n">d</span> <span class="o">*</span> <span class="n">getInt</span><span class="o">(),</span> <span class="n">new_d</span> <span class="o">=</span> <span class="n">d</span><span class="o">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">Quadratic</span><span class="o">(</span><span class="n">new_a</span> <span class="o">*</span> <span class="n">new_d</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="o">-</span> <span class="n">new_c</span> <span class="o">*</span> <span class="n">new_d</span><span class="o">,</span> <span class="n">new_a</span> <span class="o">*</span> <span class="n">new_a</span> <span class="o">*</span> <span class="n">new_b</span> <span class="o">-</span> <span class="n">new_c</span> <span class="o">*</span> <span class="n">new_c</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;(%d*sqrt(%d) + %d) / %d&quot;</span><span class="o">,</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="n">c</span><span class="o">,</span> <span class="n">d</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span> <span class="o">(</span><span class="n">Quadratic</span> <span class="n">other</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">a</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">a</span> <span class="o">&amp;&amp;</span> <span class="n">b</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">b</span> <span class="o">&amp;&amp;</span> <span class="n">c</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">c</span> <span class="o">&amp;&amp;</span> <span class="n">d</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">d</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">period</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Quadratic</span><span class="o">[]</span> <span class="n">cache</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Quadratic</span><span class="o">[</span><span class="mi">10000</span><span class="o">];</span>
</span><span class='line'>        <span class="n">Quadratic</span> <span class="n">x</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">now</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="o">++</span><span class="n">now</span><span class="o">;</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">now</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">cache</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">now</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">x</span> <span class="o">=</span> <span class="n">cache</span><span class="o">[</span><span class="n">now</span><span class="o">]</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="na">getNext</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Solve equation of the form x^2 - dy^2 = c, where c = 1 or c = -1. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PellSolver</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">d</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">c</span><span class="o">;</span> <span class="c1">// Must be 1 or -1</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Quadratic</span> <span class="n">now</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">period</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">prevIndex</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">solvable</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">BigInteger</span><span class="o">[]</span> <span class="n">p</span><span class="o">;</span> <span class="c1">// Store intermediate values of denominator</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">BigInteger</span><span class="o">[]</span> <span class="n">q</span><span class="o">;</span> <span class="c1">// nominator</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">PellSolver</span> <span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">d</span><span class="o">,</span> <span class="n">c</span><span class="o">,</span> <span class="mi">1000</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">PellSolver</span> <span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">c</span><span class="o">,</span> <span class="kt">int</span> <span class="n">maxSolution</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">d</span><span class="o">,</span> <span class="n">c</span><span class="o">,</span> <span class="n">maxSolution</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">c</span><span class="o">,</span> <span class="kt">int</span> <span class="n">maxSolution</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">d</span> <span class="o">=</span> <span class="n">d</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">c</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">now</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Quadratic</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">d</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">=</span> <span class="n">now</span><span class="o">.</span><span class="na">period</span><span class="o">();</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">solvable</span> <span class="o">=</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">period</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">solvable</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">prevIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>            <span class="n">maxSolution</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">maxSolution</span><span class="o">);</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">[</span><span class="n">maxSolution</span> <span class="o">+</span> <span class="mi">10</span><span class="o">];</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">q</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigInteger</span><span class="o">[</span><span class="n">maxSolution</span> <span class="o">+</span> <span class="mi">10</span><span class="o">];</span>
</span><span class='line'>            <span class="n">p</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">q</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">BigInteger</span><span class="o">.</span><span class="na">ZERO</span><span class="o">;</span>
</span><span class='line'>            <span class="n">p</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">q</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">BigInteger</span><span class="o">.</span><span class="na">ONE</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">isSolutionIndex</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">c</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="o">(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">%</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">c</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="o">(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">%</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="o">((</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span><span class="o">)</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">c</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="o">(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">%</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="o">((</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="k">this</span><span class="o">.</span><span class="na">period</span><span class="o">)</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* Return a solution pair {x, y} */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">BigInteger</span><span class="o">[]</span> <span class="nf">getNext</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">solvable</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">++</span><span class="k">this</span><span class="o">.</span><span class="na">prevIndex</span><span class="o">;</span> <span class="o">;</span> <span class="n">i</span> <span class="o">=</span> <span class="o">++</span><span class="k">this</span><span class="o">.</span><span class="na">prevIndex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">now_x</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">now</span><span class="o">.</span><span class="na">getInt</span><span class="o">();</span>
</span><span class='line'>                <span class="k">this</span><span class="o">.</span><span class="na">now</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">now</span><span class="o">.</span><span class="na">getNext</span><span class="o">();</span>
</span><span class='line'>                <span class="k">this</span><span class="o">.</span><span class="na">p</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">p</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">].</span><span class="na">multiply</span><span class="o">(</span><span class="n">BigInteger</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">now_x</span><span class="o">)).</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">p</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="o">]);</span>
</span><span class='line'>                <span class="k">this</span><span class="o">.</span><span class="na">q</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">q</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">].</span><span class="na">multiply</span><span class="o">(</span><span class="n">BigInteger</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">now_x</span><span class="o">)).</span><span class="na">add</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">q</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="o">]);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">isSolutionIndex</span><span class="o">(</span><span class="n">i</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">BigInteger</span><span class="o">[]</span> <span class="n">res</span> <span class="o">=</span> <span class="o">{</span><span class="n">p</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">q</span><span class="o">[</span><span class="n">i</span><span class="o">]};</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">BigInteger</span><span class="o">[]</span> <span class="n">res</span> <span class="o">=</span> <span class="o">{</span><span class="n">BigInteger</span><span class="o">.</span><span class="na">ZERO</span><span class="o">,</span> <span class="n">BigInteger</span><span class="o">.</span><span class="na">ZERO</span><span class="o">};</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>]]></content>
  </entry>
  
</feed>
